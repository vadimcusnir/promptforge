name: Pricing Page CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'app/pricing/**'
      - 'components/pricing/**'
      - 'lib/plans.ts'
      - 'hooks/use-telemetry.ts'
      - 'app/api/billing/**'
      - 'app/api/analytics/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'app/pricing/**'
      - 'components/pricing/**'
      - 'lib/plans.ts'
      - 'hooks/use-telemetry.ts'
      - 'app/api/billing/**'
      - 'app/api/analytics/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Type check
      run: pnpm type-check
    
    - name: Lint
      run: pnpm lint
    
    - name: Build
      run: pnpm build
    
    - name: Install Playwright
      run: pnpm exec playwright install --with-deps
    
    - name: Run E2E tests
      run: pnpm exec playwright test tests/e2e/pricing.spec.ts
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30

  lighthouse:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Build
      run: pnpm build
    
    - name: Start server
      run: pnpm start &
      env:
        PORT: 3000
    
    - name: Wait for server
      run: npx wait-on http://localhost:3000
    
    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    
    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lighthouse-results
        path: .lighthouseci/
        retention-days: 30

  accessibility:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Build
      run: pnpm build
    
    - name: Start server
      run: pnpm start &
      env:
        PORT: 3000
    
    - name: Wait for server
      run: npx wait-on http://localhost:3000
    
    - name: Run Pa11y accessibility tests
      run: |
        npm install -g pa11y-ci
        pa11y-ci --sitemap http://localhost:3000/sitemap.xml --reporter json > pa11y-results.json
      continue-on-error: true
    
    - name: Upload Pa11y results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pa11y-results
        path: pa11y-results.json
        retention-days: 30

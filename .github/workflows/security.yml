name: Security & SAST

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 6 * * 1' # Weekly security scan

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '9.15.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run npm audit
        run: |
          pnpm audit --audit-level=moderate --json > audit-report.json || true
          cat audit-report.json

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: audit-report.json
          retention-days: 30

  eslint-security:
    name: ESLint Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '9.15.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint Security
        run: |
          pnpm run lint:security --format=sarif --output-file=eslint-security.sarif || true

      - name: Upload ESLint Security results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: eslint-security.sarif
          category: eslint-security

  brand-enforcement:
    name: Brand Enforcement
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Brand enforcement check
        run: |
          echo "üîç Checking for forbidden brand references..."
          if grep -r --exclude-dir=.git --exclude-dir=node_modules --exclude-dir=tmp -E 'AI[- _]?IDEI|Ai[- _]?Idei|ai[- _]?idei|AI[- _]?Prompt[- _]?Templates|Ai[- _]?Prompt[- _]?Templates|ai[- _]?prompt[- _]?templates'; then
            echo "‚ùå Vechea denumire detectatƒÉ. Folose»ôte ¬´PromptForge / PROMPTFORGE‚Ñ¢¬ª."
            echo "üîç CƒÉutare √Æn fi»ôiere..."
            grep -r --exclude-dir=.git --exclude-dir=node_modules --exclude-dir=tmp -E 'AI[- _]?IDEI|Ai[- _]?Idei|ai[- _]?idei|AI[- _]?Prompt[- _]?Templates|Ai[- _]?Prompt[- _]?Templates|ai[- _]?prompt[- _]?templates' || true
            exit 1
          else
            echo "‚úÖ Brand enforcement passed - no forbidden references found"
          fi

  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 360
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript-typescript']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:${{matrix.language}}'

  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  sbom-generation:
    name: Generate SBOM
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.0'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '9.15.0'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate SBOM
        run: |
          pnpm run sbom
          pnpm run sbom:xml

      - name: Upload SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: sbom-reports
          path: |
            sbom.json
            sbom.xml
          retention-days: 90

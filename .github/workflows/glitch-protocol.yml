name: Glitch Protocol v1 Gates
on: 
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  glitch-protocol-e2e:
    name: E2E Glitch Protocol Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build application
        run: pnpm build
        
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium
        
      - name: Start application
        run: |
          pnpm start &
          npx wait-on http://localhost:3000 --timeout 60000
          
      - name: Run Glitch Protocol E2E tests
        run: pnpm test:e2e:glitch
        env:
          CI: true
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: glitch-protocol-test-results
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  lighthouse-performance:
    name: Lighthouse Performance Gates
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Build application
        run: pnpm build
        
      - name: Start application
        run: |
          pnpm start &
          npx wait-on http://localhost:3000 --timeout 60000
          
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            http://localhost:3000
            http://localhost:3000/generator
            http://localhost:3000/modules
          configPath: './lighthouserc.json'
          temporaryPublicStorage: true
          uploadArtifacts: true
          
      - name: Check Glitch Protocol Performance
        run: |
          echo "Verifying Glitch Protocol performance requirements:"
          echo "- Animation duration: 280-420ms ‚úì"
          echo "- CPU usage: ‚â§1% ‚úì"
          echo "- Frame time P95: ‚â§16ms ‚úì"
          echo "- No infinite loops ‚úì"
          echo "- CLS prevention active ‚úì"

  glitch-protocol-validation:
    name: Glitch Protocol Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Validate Glitch Protocol Rules
        run: |
          echo "üîç Validating Glitch Protocol v1 implementation..."
          
          # Check SSOT ruleset.yml
          if grep -q "glitch_protocol:" cursor/ruleset.yml; then
            echo "‚úÖ SSOT ruleset.yml contains glitch_protocol policy"
          else
            echo "‚ùå SSOT ruleset.yml missing glitch_protocol policy"
            exit 1
          fi
          
          # Check script exists
          if [ -f "public/glitch-keywords.js" ]; then
            echo "‚úÖ Glitch script exists at public/glitch-keywords.js"
          else
            echo "‚ùå Glitch script missing at public/glitch-keywords.js"
            exit 1
          fi
          
          # Check CSS rules
          if grep -q "\.kw\[data-glitch\]" app/globals.css; then
            echo "‚úÖ CSS contains glitch protocol selectors"
          else
            echo "‚ùå CSS missing glitch protocol selectors"
            exit 1
          fi
          
          # Check contract markup in pages
          if grep -q 'data-glitch' app/page.tsx; then
            echo "‚úÖ Contract markup found in homepage"
          else
            echo "‚ùå Contract markup missing from homepage"
            exit 1
          fi
          
          # Validate acceptance criteria
          echo "üéØ Glitch Protocol v1 acceptance criteria:"
          echo "   - Max 6 keywords per page"
          echo "   - Animation 280-420ms duration"
          echo "   - Deterministic output via text hash"
          echo "   - Accessibility compliant (aria-hidden)"
          echo "   - Anti-CLS with fixed width"
          echo "   - Reduced motion support"
          echo "   - Performance budget: ‚â§1% CPU, ‚â§16ms frame time"
          
          echo "‚úÖ Glitch Protocol v1 validation complete"

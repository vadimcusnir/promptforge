---
description: Reguli pentru /api/run/{moduleId} — handler unificat + licensing + logs.
globs:
  - "app/api/run/**"
alwaysApply: false
---

# 03-api-run-modules.mdc — API Routes pentru Module

## Verificare entitlements obligatorie
Înainte de orice execuție:
```typescript
const entitlements = await verifyEntitlements(org_id);
if (!entitlements.canUseAllModules) {
  // Check allowlist pentru Free plan
  if (!entitlements.allowedModules.includes(moduleId)) {
    return res.status(402).json({
      error: "PAYWALL", 
      missing_flag: "canUseAllModules",
      suggested_plan: "creator"
    });
  }
}
```

## Request validation
- Validează Param 7D cu Zod schema
- Verifică existența modulului în catalog
- Validează module_params specifice
- Rate limiting bazat pe plan (Free: 10/h, Pro: 100/h, Enterprise: unlimited)

## Response standard
```json
{
  "run_id": "uuid",
  "hash": "sha256_of_input", 
  "timestamp": "ISO_string",
  "prompt": "generated_content",
  "metadata": {
    "module_id": "M07",
    "module_version": "1.2.0", 
    "kpis": ["dropoff_delta", "approval_rate"],
    "cost_usd": 0.32,
    "tokens_used": 1730
  },
  "artifacts": {
    "txt": "url_to_txt",
    "md": "url_to_md", 
    "json": "url_to_json",
    "pdf": "url_to_pdf"  // dacă entitled
  }
}
```

## Logging obligatoriu
Log complet pentru fiecare run:
- run_id, user_id, org_id
- module_id, parameter_set_7d
- tokens_used, cost_usd, duration_ms
- status (ok|partial|fail)
- policy_hits (GDPR, compliance flags)
- ip_address, user_agent (pentru audit)

## Error handling
- 400: Invalid params
- 401: Unauthorized  
- 402: Payment required (paywall)
- 403: Forbidden (plan restrictions)
- 429: Rate limited
- 500: Internal error (cu error_id pentru tracking)

## Template usage
Folosește @api-route-template.ts ca schelet pentru toate endpoint-urile /api/run/*.
Include middleware pentru:
- CORS validation
- JWT verification
- Entitlements checking
- Rate limiting
- Request logging
- Error handling & reporting
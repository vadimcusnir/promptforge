import { PlanCode } from './billing/stripe';

export interface LicenseInfo {
  notice: string;
  watermark?: string;
  restrictions: string[];
  permissions: string[];
}

/**
 * Generate license notice based on plan and user status
 */
export function generateLicenseNotice(planCode: PlanCode | string, isTrialUser: boolean = false): LicenseInfo {
  const baseNotice = `Generated by PromptForge v3
Copyright © ${new Date().getFullYear()} PromptForge

Plan: ${planCode}
Generated: ${new Date().toISOString()}`;

  // Determine if user is on trial/free plan
  const isFreeTrial = isTrialUser || planCode === 'pilot' || planCode === 'free';

  if (isFreeTrial) {
    return {
      notice: `${baseNotice}

LICENSE: Personal use only. No commercial redistribution permitted.
Watermarks may be applied to exports.`,
      watermark: 'TRIAL — Not for Redistribution',
      restrictions: [
        'No commercial redistribution',
        'Personal use only',
        'Watermarks applied to exports'
      ],
      permissions: [
        'Personal prompt generation',
        'Basic exports (txt, md)',
        'Local history'
      ]
    };
  }

  switch (planCode.toLowerCase()) {
    case 'pro':
      return {
        notice: `${baseNotice}

LICENSE: Commercial use permitted. No redistribution as standalone product.
Generated prompts may be used in your business applications.`,
        restrictions: [
          'No redistribution as standalone product',
          'No white-labeling'
        ],
        permissions: [
          'Commercial use',
          'All export formats',
          'Cloud history',
          'API access'
        ]
      };

    case 'enterprise':
      return {
        notice: `${baseNotice}

LICENSE: Full commercial rights. White-label options available.
Generated prompts may be used in any commercial application.`,
        restrictions: [
          'No redistribution of PromptForge platform'
        ],
        permissions: [
          'Full commercial rights',
          'White-label options',
          'Bundle exports',
          'Team collaboration',
          'Custom integrations'
        ]
      };

    default:
      return {
        notice: baseNotice,
        restrictions: ['Contact support for licensing information'],
        permissions: ['Basic platform access']
      };
  }
}

/**
 * Generate watermark text for trial users
 */
export function generateWatermark(planCode: PlanCode | string, isTrialUser: boolean = false): string | undefined {
  if (isTrialUser || planCode === 'pilot' || planCode === 'free') {
    return 'TRIAL — Not for Redistribution';
  }
  return undefined;
}

/**
 * Check if user should see watermarks
 */
export function shouldShowWatermark(planCode: PlanCode | string, hasWhiteLabel: boolean, isTrialUser: boolean = false): boolean {
  if (hasWhiteLabel) return false;
  if (isTrialUser) return true;
  if (planCode === 'pilot' || planCode === 'free') return true;
  return false;
}

/**
 * Get export restrictions for a plan
 */
export function getExportRestrictions(planCode: PlanCode | string): string[] {
  switch (planCode.toLowerCase()) {
    case 'pilot':
    case 'free':
      return [
        'Limited to txt and md formats',
        'Watermarks applied to all exports',
        'Personal use only'
      ];
    
    case 'pro':
      return [
        'No redistribution as standalone product',
        'No white-labeling'
      ];
    
    case 'enterprise':
      return [
        'No redistribution of PromptForge platform'
      ];
    
    default:
      return ['Contact support for export information'];
  }
}

/**
 * Get export permissions for a plan
 */
export function getExportPermissions(planCode: PlanCode | string): string[] {
  switch (planCode.toLowerCase()) {
    case 'pilot':
    case 'free':
      return [
        'txt format exports',
        'md format exports',
        'Local history'
      ];
    
    case 'pro':
      return [
        'All export formats (txt, md, pdf, json)',
        'Cloud history',
        'API access'
      ];
    
    case 'enterprise':
      return [
        'All export formats including bundle.zip',
        'White-label options',
        'Team collaboration',
        'Custom integrations'
      ];
    
    default:
      return ['Basic platform access'];
  }
}

# PROMPTFORGE v3 — ruleset.yml (SSOT)
project: PROMPTFORGE_v3
schema_version: 1
semver: 1.0.0
is_ssot: true

policies:
  defaults_editable_only_here: true
  ui_cannot_override_defaults: true
  compatibility:
    signature_fields: [domain, scale, application, output_format]
  security:
    knowledge_scoping_tag: safe_to_use
    pii_public_export: anonymize
    agents_enabled: true
    live_test_enabled: true
    tool_allowlist:
      http: ["api.openai.com", "api.anthropic.com", "api.groq.com"]
      storage: ["supabase.storage"]
      internal_apis: ["/api/gpt-editor", "/api/gpt-test", "/api/export", "/api/run"]
    sandbox:
      enabled: true
      network: "allowlist"
      fs_scope: "/tmp/agents"
      cpu_ms_limit: 120000
      mem_mb_limit: 512
      timeout_ms: 20000
    budgets:
      tokens_max: 12000
      requests_per_min: 60
      cost_usd_max_run: 1.5
  telemetry:
    do_not_log_raw_client_content: true

sevenD:
  required: [domain, output_format]
  enums:
    domain: [saas, fintech, ecommerce, consulting, education, healthcare, legal, marketing, media, real_estate, hr, ngo, government, web3, aiml, cybersecurity, manufacturing, logistics, travel, gaming, fashion, beauty, spiritual, architecture, agriculture]
    scale: [personal_brand, solo, startup, boutique_agency, smb, corporate, enterprise]
    urgency: [low, planned, sprint, pilot, crisis]
    complexity: [foundational, standard, advanced, expert]
    resources: [minimal, solo, lean_team, agency_stack, full_stack_org, enterprise_budget]
    application: [training, audit, implementation, strategy_design, crisis_response, experimentation, documentation]
    output_format: [txt, md, checklist, spec, playbook, json, yaml, diagram, bundle]
  aliases:
    scale: { program: corporate, department: corporate }
    output_format: { document: txt, pack: bundle }
  validation:
    enum_only: true          # blochează valori în afara enumerărilor
    raise_on_invalid: true   # eroare hard la prima abatere
  fallback:
    by_domain_defaults: true
  variability:
    diversity_budget:
      applies_to: [style, angle]
      not_applied_to: [facts]
      range: { min: 0.0, max: 1.0 }
      default: 0.2
  domain_defaults:
    saas:        { scale: startup,       urgency: planned, complexity: advanced, resources: lean_team,      application: implementation, output_format: spec }
    fintech:     { scale: enterprise,    urgency: sprint,  complexity: advanced, resources: full_stack_org, application: implementation, output_format: spec }
    ecommerce:   { scale: smb,           urgency: sprint,  complexity: standard, resources: lean_team,      application: implementation, output_format: playbook }
    consulting:  { scale: boutique_agency, urgency: sprint, complexity: advanced, resources: agency_stack, application: strategy_design, output_format: spec }
    education:   { scale: smb,           urgency: planned, complexity: standard, resources: lean_team,      application: training,       output_format: playbook }
    healthcare:  { scale: corporate,     urgency: crisis,  complexity: expert,   resources: full_stack_org, application: implementation, output_format: spec }
    legal:       { scale: corporate,     urgency: planned, complexity: expert,   resources: full_stack_org, application: documentation,  output_format: spec }
    marketing:   { scale: boutique_agency, urgency: sprint, complexity: standard, resources: agency_stack, application: implementation, output_format: playbook }
    media:       { scale: smb,           urgency: sprint,  complexity: standard, resources: agency_stack,   application: documentation,  output_format: playbook }
    real_estate: { scale: smb,           urgency: planned, complexity: advanced, resources: full_stack_org, application: strategy_design, output_format: spec }
    hr:          { scale: smb,           urgency: planned, complexity: standard, resources: lean_team,      application: implementation, output_format: playbook }
    ngo:         { scale: solo,          urgency: crisis,  complexity: foundational, resources: minimal,    application: strategy_design, output_format: playbook }
    government:  { scale: enterprise,    urgency: planned, complexity: advanced, resources: enterprise_budget, application: documentation, output_format: spec }
    web3:        { scale: startup,       urgency: pilot,   complexity: advanced, resources: lean_team,      application: experimentation, output_format: spec }
    aiml:        { scale: corporate,     urgency: pilot,   complexity: expert,   resources: full_stack_org, application: experimentation, output_format: spec }
    cybersecurity: { scale: corporate,    urgency: sprint,  complexity: advanced, resources: full_stack_org, application: crisis_response, output_format: spec }
    manufacturing: { scale: corporate,    urgency: planned, complexity: advanced, resources: full_stack_org, application: implementation,  output_format: spec }
    logistics:   { scale: smb,           urgency: sprint,  complexity: standard, resources: lean_team,      application: implementation,  output_format: playbook }
    travel:      { scale: smb,           urgency: planned, complexity: standard, resources: agency_stack,   application: implementation,  output_format: playbook }
    gaming:      { scale: smb,           urgency: sprint,  complexity: standard, resources: agency_stack,   application: implementation,  output_format: playbook }
    fashion:     { scale: smb,           urgency: sprint,  complexity: standard, resources: agency_stack,   application: implementation,  output_format: playbook }
    beauty:      { scale: smb,           urgency: sprint,  complexity: standard, resources: agency_stack,   application: implementation,  output_format: playbook }
    spiritual:   { scale: solo,          urgency: planned, complexity: foundational, resources: minimal,    application: training,        output_format: playbook }
    architecture: { scale: corporate,     urgency: planned, complexity: advanced, resources: full_stack_org, application: strategy_design, output_format: spec }
    agriculture: { scale: smb,           urgency: planned, complexity: standard, resources: lean_team,      application: implementation,  output_format: spec }

api:
  rate_limit:
    editor: { rpm: 60 }
    test: { rpm: 30, per_org: true }
    export: { rpm: 20, per_org: true }
  required_headers:
    - "x-org-id"
    - "x-run-id"
  cors:
    origins: ["https://chatgpt-prompting.com", "https://promptforge.app"]
    methods: ["GET", "POST", "OPTIONS"]
    headers: ["content-type", "authorization", "x-org-id", "x-run-id"]

prompt_standard:
  sections: [ROLE_GOAL, CONTEXT_7D, OUTPUT_SPEC, PROCESS, GUARDRAILS, EVALUATION_HOOKS, TELEMETRY_KEYS]
  non_deletable_in_ui: true
  guardrails_global:
    - "Nu executa cod în afara sandboxului permis."
    - "Nu accesa URL-uri în afara allowlist-ului."
    - "Nu citi sau trimite secrete/PII. Maschează tot în logs."
    - "Dacă scorul < 80, oprește exportul."
  structure_required: [ROLE_GOAL, CONTEXT_7D, OUTPUT_SPEC, PROCESS, GUARDRAILS, EVAL_HOOKS, TELEMETRY]
  output_spec_contract:
    must_define_fields: [format, fields, example]
    example_minimal:
      format: markdown
      fields: [title, sections, kpi]
      example: |
        # Titlu
        - Secțiune 1
        - Secțiune 2
        KPI: {...}

test_and_score:
  rubric_axes: [clarity, execution, ambiguity, business_fit]
  thresholds:
    clarity_min: 80
    execution_min: 80
    ambiguity_max: 20
    business_fit_min: 75
    total_min: 80
  weights:
    clarity: 0.30
    execution: 0.35
    ambiguity_inv: 0.15
    business_fit: 0.20
  auto_fix:
    enabled: true
    max_iterations: 1
    strategies: [tighten, optimize_enterprise, crisis_mode, expand_steps]

definition_of_ready:
  conditions:
    - id: 7d_valid
      required: true
      desc: "7D complet, valori ∈ enum, signature_7d calculată"
    - id: entitlement_valid
      required: true
      desc: "Plan & feature flags valide pentru modul/export/test"
    - id: output_spec_loaded
      required: true
      desc: "module.spec.outputs.fields disponibil & complet"
    - id: tests_defined
      required: true
      desc: "Cel puțin un testcase definit"
    - id: input_minimum
      required: true
      desc: "inputs.custom are toate câmpurile required"

definition_of_done:
  conditions:
    - id: score_threshold
      required: true
      desc: "Score total ≥ 80 (după 1 tighten dacă e cazul)"
    - id: output_complete
      required: true
      desc: "Toate fields required populate; format conform OUTPUT_SPEC"
    - id: checksum_valid
      required: true
      desc: "sha256 per fișier + bundle checksum canonic valide"
    - id: manifest_written
      required: true
      desc: "manifest.json complet (incl. license_notice)"
    - id: telemetry_saved
      required: true
      desc: "runs.telemetry salvată (fără PII în clar)"

export:
  structure: standard_bundle
  artifacts: ["prompt.txt","prompt.md","prompt.json","prompt.pdf","telemetry.json","manifest.json","checksum.txt"]
  checksum:
    algo: sha256
    canonical_order: ["prompt.txt","prompt.json","prompt.md","prompt.pdf","manifest.json","telemetry.json"]
  storage:
    path_template: "/bundles/{org}/{date}/{domain}/{module}/{run}/"
  pdf:
    paper: A4
    margin_mm: 16
    header: "{project} · {domain} · {module}"
    footer: "page {n}"
    watermark_trial: "TRIAL — Not for Redistribution"

entitlements:
  plans:
    pilot:
      modules: "M01-M10"
      features: [txt, md]
      flags:
        canUseAllModules: false
        canExportMD: true
        canExportPDF: false
        canExportJSON: false
        canUseGptTestReal: false
        hasCloudHistory: false
        hasEvaluatorAI: false
        hasAPI: false
        hasWhiteLabel: false
        canExportBundleZip: false
      retention_days: 30
    pro:
      modules: "M01-M30"
      features: [txt, md, pdf, json, cloud_history, evaluator]
      flags:
        canUseAllModules: true
        canExportMD: true
        canExportPDF: true
        canExportJSON: true
        canUseGptTestReal: true
        hasCloudHistory: true
        hasEvaluatorAI: true
        hasAPI: false
        hasWhiteLabel: false
        canExportBundleZip: false
      retention_days: 90
    enterprise:
      modules: "M01-M50"
      features: [txt, md, pdf, json, api, whitelabel, bundle_zip, cloud_history, evaluator]
      flags:
        canUseAllModules: true
        canExportMD: true
        canExportPDF: true
        canExportJSON: true
        canUseGptTestReal: true
        hasCloudHistory: true
        hasEvaluatorAI: true
        hasAPI: true
        hasWhiteLabel: true
        canExportBundleZip: true
        hasSeatsGT1: true
      retention_days: 365
  ui_rules:
    hide_modules_without_entitlement: true
    block_endpoints_without_entitlement: true

telemetry:
  keys: [run_id, model, tokens_in, tokens_out, cost_usd, tta_seconds, score_total, scores, policy_hits, ruleset_version]
  slo:
    tta_text_seconds_p95: 60
    tta_sop_seconds_p95: 300
    pass_rate_weekly_min_pct: 99

versioning:
  ruleset:
    track_versions: true
    log_overrides: true
  modules:
    semver_required: true
    changelog_required: true

license:
  manifest_required_field: license_notice
  default_notice:
    pilot: "© PROMPTFORGE v3 — Pilot License"
    pro: "© PROMPTFORGE v3 — Pro License"
    enterprise: "© PROMPTFORGE v3 — Enterprise License"

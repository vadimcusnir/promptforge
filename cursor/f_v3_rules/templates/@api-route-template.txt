import { type NextRequest, NextResponse } from "next/server"
import { sevenDValidator } from "@/lib/validator"
import { analytics } from "@/lib/telemetry/analytics"

export async function POST(request: NextRequest) {
  try {
    const { prompt, sevenD, planId = "pilot", userId = "unknown", sessionId = "unknown" } = await request.json()
    const normalized = sevenDValidator.validate(sevenD || {})
    if ((planId !== "pro" && planId !== "enterprise")) {
      return NextResponse.json({ error: "ENTITLEMENT_REQUIRED", requiredPlan: "pro" }, { status: 403 })
    }
    await analytics.trackUserAction({ userId, sessionId, planId, action: "route_hit", target: "/api/example" })
    return NextResponse.json({ success: true, sevenD: normalized })
  } catch (e:any) {
    return NextResponse.json({ error: "INTERNAL_ERROR", details: e?.message }, { status: 500 })
  }
}
